#QT learning

QApplication::setAttribution(QT::AA_EnableHighDpiScaling);
//write in the main.cpp
//to promote the problem of dpi in GUI

this->ui->radiobutton->setAutoExclusive(bool);
//to change the defalt of radiobutton
//remember to switch it back to the defalt

//QMessage question box
QmessageBox::StandardButton reply = QMessageBox::question(this,"WindowTitle","Question",QMessage::Yes | QMessage::No);
if(reply == QMessage::Yes){
  /condition/  //general condition: QApplication::quit(); to leave the application window
}else {
  /condition/  //general condition: return; cancel the question box and back to the application window
}
//OTHER QMessageBox: critical, information, warning 

//stacked widget with button
//stacked different pages in the same widget in mainwindow
class MainWindow{
public:
  void switchPage(); //creat a function for switch pages in the header file's MainWindow class define
}
MainWindow::MainWindow(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::MainWindow)
{
  ui->setupUi(this);
  connect(ui->Button_1,&QPushButton::clicked,this,&MainWindow::switchPage);
  connect(ui->Button_2,&QPushButton::clicked,this,&MainWindow::switchPage);
  connect(ui->Button_3,&QPushButton::clicked,this,&MainWindow::switchPage);
  //connect the Button and switch function
}
//define the function
void MainWindow::switchPage(){
  QPushButton *button = qobject_cast<QPushButton*>(sender()); //obtain the pointer of the button USER clicked
  if(button == ui->Button_1)
    ui->stackedWidget->setCurrentIndex(0);
  else if(button == ui->Button_2)
    ui->stackedWidget->setCurrentIndex(1);
  else if(button == ui->Button_3)
    ui->stackedWidget->setCurrentIndex(2);
}

=============================== File I/O  =========================================

QString filePath = QFileDialog::getOpenFileName(this,tr("OpenText"),"",tr("Text(*.txt)"));
QString filePath = QFileDialog::getOpenFileName(this,tr("OpenImage"),"",tr("Image(*.png *.jpg *.jepg)"));
//get the path of the file user selects
//should #include <QFileDialog> in the header file
//QString filePath; could declare in the class MainWindow{private:}; so that could be use in any function include the header file

//the code of reading text file
QFile fileRead(filePath);  //#include <QFile> 
if(fileRead.open(QIODevice::ReadOnly)){
  QTextStream input(&fileRead);  //#include <QTextStream>
  input.setCodec("UTF-8");
  while(!input.atEnd()){
    QString line = input.readline();
    ui->textBrowser->append(line.toStdString().c_str());
  }
  fileRead.close();
}

//the code of writing text file
QString UserInput = ui->lineEdit->text();
QFile fileWrite(filePath);
if(fileWrite.open(QIODevice::WriteOnly | QIODevice::Append | QIODevice::Text )){
  QTextStream output(&fileWrite);
  output<<UserInput<<Qt::endl;
  fileWrite.close();
}

//read and display *.png image
QPixmap icon("imagePath");
ui->label->setPixmap(icon.scaled(ui->label->width(),ui->label->height(),Qt::KeepAspectRatio));

==================================================================================
